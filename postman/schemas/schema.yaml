openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'Emu Accom'
  license:
    name: MIT
servers:
  - url: 'localhost:3000'
paths:
  /dorm:
    get:
      summary: 'Dormitory: Fetches all the dorm data'
      operationId: listDorms
      tags:
        - dorm
      parameters:
        - in: query
          name: pageSize
          description: 'Pagination: Page size of dorms sent back in the payload. Defaults to 10'
          schema:
            type: integer
            default: 10
        - in: query
          name: pageNumber
          description: 'Pagination: Current Page number. Defaults to 1'
          schema:
            type: integer
            default: 1
        - in: query
          name: paginate
          description: 'Pagination: Deactivate pagination. Defaults to true'
          schema:
            type: boolean
            default: true
        - in: query
          name: param
          description: "Search: Parameter you want to search in. E.g. Title, Description"
          schema:
              type: string
              default: ''
        - in: query
          name: keyword
          description: "Search: Keyword you want to search in"
          schema:
              type: string
              default: ''
      responses:
        '200':
          description: 'All Dorms or Dorms that match the search params'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DormResponse'
        '404':
          description: 'No dorm available'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    DormResponse:
      type: object
      required:
        - dorms
      properties:
        dorms:
          type: object
        page:
          type: integer
          minimum: 1
        pages:
          type: integer
          minimum: 1
    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
security:
  - BasicAuth: []